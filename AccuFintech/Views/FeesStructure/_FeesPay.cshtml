@model AccuFintech.Models.FeesStructureModel


@using (Html.BeginForm("FeesPay", "FeesStructure"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6 col-lg-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.FranchaiseCode, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.FranchaiseCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Franchaise Code", @id = "txtFranchaiseCode", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FranchaiseCode, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Studentid, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.Studentid, new { htmlAttributes = new { @class = "form-control", @placeholder = "StudentId", @id = "txtStudentId", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Studentid, "", new { @class = "text-danger" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control", @placeholder = "Course", @id = "txtCourse", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
                </div>
                <div class="form-group ">
                    @Html.LabelFor(model => model.Batch, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.Batch, new { htmlAttributes = new { @class = "form-control", @placeholder = "Batch", @id = "txtBatch", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Batch, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PayType, htmlAttributes: new { @class = "col-form-label" })
                    @Html.DropDownListFor(model => model.PayType, new SelectList(ViewBag.payModeList), "--Select Paymode--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PayType, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="col-md-6 col-lg-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalFees, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.TotalFees, new { htmlAttributes = new { @class = "form-control", @placeholder = "TotalFees", @id = "txtTotalFees", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.TotalFees, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalPaid, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.TotalPaid, new { htmlAttributes = new { @class = "form-control", @placeholder = "Course", @id = "txtTotalPaid", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.TotalPaid, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RemainFee, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.RemainFee, new { htmlAttributes = new { @class = "form-control", @placeholder = "PaidFees", @id = "txtRemainFee", @autocomplete = "off", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.RemainFee, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PaidFees, htmlAttributes: new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.PaidFees, new { htmlAttributes = new { @class = "form-control", @placeholder = "PaidFees", @id = "PaidFees" } })
                    @Html.ValidationMessageFor(model => model.PaidFees, "", new { @class = "text-danger" })
                </div>
                <div class="form-group text-right">
                    <div class="mt-md-4 mb-4">
                        <input type="submit" value="Pay" id="btnPay" class="btn btn-primary btn-sm" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

