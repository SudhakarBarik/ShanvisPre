@model AccuFintech.Models.UserMasterModel

@{
    ViewBag.Title = "User Master";
}

@if (TempData["Status"] != null)
{
    if (TempData["Status"].Equals("Ok"))
    {
        <div class="alert alert-success" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Success!</strong> @TempData["Message"]
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Failed!</strong> @TempData["Message"]
        </div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h5 class="font-weight-bold">User Master</h5>
            <hr />
            <div class="row">
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        <label class="col-form-label col-md-4 col-12"> User ID</label>
                        <div class="col-md-8 col-12">
                            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @placeholder = "User ID" } })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        <label class="col-form-label col-md-4 col-12"> Password</label>
                        <div class="col-md-8 col-12">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        <label class="col-form-label col-md-4 col-12"> Usertype</label>
                        <div class="col-md-8 col-12">
                            @Html.DropDownListFor(model => model.UserType, new SelectList(ViewBag.UserTypeList, "Value", "Key"), "--Select UserType--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        <label class="col-form-label col-md-4 col-12"> Name</label>
                        <div class="col-md-8 col-12">
                            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        <label class="col-form-label col-md-4 col-12"> Phone</label>
                        <div class="col-md-8 col-12">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="form-group row">
                        @Html.Label("Active", htmlAttributes: new { @class = "col-form-label", @id = "" })
                        <div class="col-md-8 col-sm-12 form-check" style="padding: 0.5rem;">
                            @Html.CheckBoxFor(model => model.LockMode, new { @class = "toggle-switch", id = "IsActive" })
                        </div>
                    </div>
                    <div class="d-flex justify-content-end">
                        @Html.HiddenFor(model => model.opsection)
                        <button class="btn btn-primary btn-sm">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-sm w-100" id="TBL_UserList">
                    <thead class="table-secondary">
                        <tr>
                            <th>UserID</th>
                            <th>UserType</th>
                            <th>Name</th>
                            <th>Phone</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>

}

<script src="~/Scripts/ProjectScripts/Master/UserMaster.js"></script>